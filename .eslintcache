[{"/Users/douglashowroyd/insert-image-here/src/index.js":"1","/Users/douglashowroyd/insert-image-here/src/reportWebVitals.js":"2","/Users/douglashowroyd/insert-image-here/src/App.js":"3","/Users/douglashowroyd/insert-image-here/src/components/Search.js":"4","/Users/douglashowroyd/insert-image-here/src/components/Display.js":"5","/Users/douglashowroyd/insert-image-here/src/components/DisplayRow.js":"6"},{"size":500,"mtime":1606841152608,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606841152619,"results":"9","hashOfConfig":"8"},{"size":1306,"mtime":1607091940843,"results":"10","hashOfConfig":"8"},{"size":2623,"mtime":1607354663939,"results":"11","hashOfConfig":"8"},{"size":591,"mtime":1607092018925,"results":"12","hashOfConfig":"8"},{"size":587,"mtime":1607092018916,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1cnmtso",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/douglashowroyd/insert-image-here/src/index.js",[],["29","30"],"/Users/douglashowroyd/insert-image-here/src/reportWebVitals.js",[],"/Users/douglashowroyd/insert-image-here/src/App.js",[],"/Users/douglashowroyd/insert-image-here/src/components/Search.js",["31"],"import React, {useEffect, useState} from \"react\";\nimport '../App.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction Search(props) {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const [searchURL, setSearchURL] = useState(\"https://images-api.nasa.gov/search?q=nebula&media_type=image\");\n    const [allImageURLS, setAllImageURLS] = useState([]);\n    const [loaded, setLoaded] = useState(true);\n\n    const rootURL = 'https://images-api.nasa.gov/search?q='\n    const mediaType = \"&media_type=image\"\n\n    useEffect(() => {\n        setSearchURL(rootURL + searchTerm + mediaType)\n    }, [searchTerm])\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (!loaded) {\n                setLoaded(true)\n                if(allImageURLS.slice(0,5) !== []){\n                    props.updateURLS(searchTerm, allImageURLS.slice(0,5))\n                }\n            }\n        }, 500);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [loaded, allImageURLS]);\n\n\n    function handleClick() {\n        let collection = []\n        let imageURLs = []\n        fetch(searchURL)\n            .then((res) => res.json())\n            .then((imageCollection) => {\n                collection = imageCollection[\"collection\"][\"items\"];\n                collection = collection.map(collection => collection[\"href\"])\n                console.log(collection)\n\n                collection.forEach(collection => {\n                    fetch(collection)\n                        .then(res => res.json())\n                        .then(data => {imageURLs.push(data[0]); console.log(data);})\n                        .catch(error => {\n                            console.error('There has been a problem with your image fetch operation:', error)\n                        })\n                })\n\n                setAllImageURLS(imageURLs)\n            })\n            .then(() => {\n                setLoaded(false);\n            })\n            .catch(error => {\n                    console.error('There has been a problem with your collection fetch operation:', error)\n            });\n    }\n\n    return (\n        <div className=\"Search\">\n            <TextField\n                id=\"standard-basic\"\n                label=\"Search\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n            />\n            <Button onClick={handleClick} variant=\"contained\" size=\"medium\">Search</Button>\n        </div>\n    );\n}\n\nexport default Search;\n","/Users/douglashowroyd/insert-image-here/src/components/Display.js",[],"/Users/douglashowroyd/insert-image-here/src/components/DisplayRow.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":33,"column":8,"nodeType":"40","endLine":33,"endColumn":30,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'searchTerm'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["46"],["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [loaded, allImageURLS, props, searchTerm]",{"range":"49","text":"50"},[1052,1074],"[loaded, allImageURLS, props, searchTerm]"]